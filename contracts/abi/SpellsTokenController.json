{
  "contractName": "SpellsTokenController",
  "abi": [
    {
      "inputs": [],
      "name": "SenderNotGodspell",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "godspell",
          "type": "address"
        }
      ],
      "name": "GodspellUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spellGate",
          "type": "address"
        }
      ],
      "name": "setSpellGate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSpellGate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_godspell",
          "type": "address"
        }
      ],
      "name": "setGodsepll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_state",
          "type": "uint8"
        }
      ],
      "name": "setSaleState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSaleState",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "_state",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price_",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SenderNotGodspell\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"godspell\",\"type\":\"address\"}],\"name\":\"GodspellUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getSaleState\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"_state\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSpellGate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_godspell\",\"type\":\"address\"}],\"name\":\"setGodsepll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price_\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_state\",\"type\":\"uint8\"}],\"name\":\"setSaleState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spellGate\",\"type\":\"address\"}],\"name\":\"setSpellGate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"setGodsepll(address)\":{\"details\":\"Only callable by the godspell.\"},\"setSaleState(uint8)\":{\"details\":\"Sets sale state to CLOSED (0), PRESALE (1), or OPEN (2).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setGodsepll(address)\":{\"notice\":\"Set the godspell.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/spells/facets/SpellsTokenController.sol\":\"SpellsTokenController\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]},\"@solidstate/contracts/introspection/ERC165Storage.sol\":{\"keccak256\":\"0x61f281af116b703f31c0fdd8616cab9c5ad71f7d5d0038b60ec1512587b2f91d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7185857eeb8c6d59bec6ae25e98e6426b69b5255ef6f549b5e3d1d15696046c6\",\"dweb:/ipfs/QmaULND4CAF1uAGcX1HktwivRWEfMeCsyMkQAgj7Hc6vAJ\"]},\"project:/contracts/dust/ERC20X/IERC20X.sol\":{\"keccak256\":\"0xee4112132639399cb39ca5fb67d2e480b4e95045e80816bf305dcddc0ece2cb6\",\"urls\":[\"bzz-raw://c0845d5e0340727db4618c85ff52e684f7a847647ed45472c039c83a5028196e\",\"dweb:/ipfs/QmZnwRDdeYxoi1pudveN2611Qbht4a1iC83g4MWsgtHHP3\"]},\"project:/contracts/dust/IDust.sol\":{\"keccak256\":\"0xb1a67b30bf438be560f507d94007b99a8b8d4c7fda726bced0c302facb40e90c\",\"urls\":[\"bzz-raw://e3a3fcda077bfc6547c164a302d1f43fb30bed1763618bbea8cfedae4c5004ab\",\"dweb:/ipfs/QmQdRGN6pWnPWFWCaw8V6dypUQX1ykDEyT674qy9FAJnB8\"]},\"project:/contracts/helpers/ECDSA.sol\":{\"keccak256\":\"0x02ce1c5e5552c0d7186524b62172c59eaef113910f1f1b9b58f97906259c5d5a\",\"urls\":[\"bzz-raw://300e91c52b7dd7c00c99b240b4239d882a88f0814629c3f8b051a879565bb832\",\"dweb:/ipfs/QmTkjmQNn7dGvZXXVKvHDE5EbtUo7JyFR9RqRUC2xVFdcE\"]},\"project:/contracts/spells/facets/ERC721A/ERC721AStorage.sol\":{\"keccak256\":\"0xb6b1d3cd23fe96ae633fbb48e1124b2f1b4e0d4935b64c47d5ab51771f1baca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f39dbb0eb7b0d7c4b63e7d8443d4f9b8db666bf1b4a6d15843750727e7ee5d6\",\"dweb:/ipfs/Qmdij3Pjx9NaSzCo2Xy7s7Y9EGReT4sDNWW9X8EUMQMeYZ\"]},\"project:/contracts/spells/facets/ERC721A/ERC721AUpgradeable.sol\":{\"keccak256\":\"0x8f526ff0c8ed751aeaad5f644a347490686b2f0a44d571394a331d26ad825c22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://690d7568425fa6fa4d44de85961bbe32dcf6d8898454c8226fcafd81056b15c5\",\"dweb:/ipfs/Qmb2T4JPaXuRkiYmxn2quAfvP9VMFYXji7wJyTj4SC8GR9\"]},\"project:/contracts/spells/facets/ERC721A/ERC721A__Initializable.sol\":{\"keccak256\":\"0x5a0edf4fefc32702b7ff5735eaa1558a9d10b937d6b746a5844fa249d3b2820a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43794584db67472f144bf72f30e36db06e15503708bde2d22266ec7fb683db62\",\"dweb:/ipfs/QmWGSXdM38izVFa5sqWkWys4KED8RQ8y18dmJ2bkMWg4kM\"]},\"project:/contracts/spells/facets/ERC721A/ERC721A__InitializableStorage.sol\":{\"keccak256\":\"0x933e5ee1bdcf042a2e61ff8100d53c5fa634d873017528412b798ed43bc603e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58d08bd5dad8afa7e3d46d48a82f4150fbb68720ae1ee1a27bb7f7f559c99cf4\",\"dweb:/ipfs/QmaYQFCfpkuTouMTGBTBFBjkmpEYabmARku6VsQku8xPsB\"]},\"project:/contracts/spells/facets/ERC721A/IERC721AUpgradeable.sol\":{\"keccak256\":\"0x7d3475fa94c20639c1dbd6ee70f388aae5481b85da7e3217c3990921d47763c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6ffde5fd429ad7003afbd80c027f2a0a7ddb8a9d498c9f53a08812b918988b\",\"dweb:/ipfs/QmZKCpRL6XivfSzTEdmnFGr4YeXCpLANSMRmpi7iAFPjXw\"]},\"project:/contracts/spells/facets/ERC721A/LibERC721AUpgradeable.sol\":{\"keccak256\":\"0x5669defb401cb6529c5e22dc8bf12eb6c9d07968ce5b5546d79e3c18b1be2572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0ea5d8f5f2787826211298daab8b0d1c678fb667822d8e2df63cbbeb69c1a18\",\"dweb:/ipfs/QmStSKN7BZNkp1UtLtaukjdFu74PquRgWinqtPx2TUkKd6\"]},\"project:/contracts/spells/facets/ERC721A/extensions/ERC721AQueryableUpgradeable.sol\":{\"keccak256\":\"0x5f401d9b7ae2cea333a2dac7c77e4b2e408d1b1b6ed48a86fae53b33b91f7c31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e45e949475fe67f3b7e69be5cad7011f00ed91221e039174ea4de9ab36586c8\",\"dweb:/ipfs/QmNRNQFLqEKRp5XA7RG4xTCB6tEnHYiZBmEPFhmSHXHEsT\"]},\"project:/contracts/spells/facets/ERC721A/extensions/IERC721AQueryableUpgradeable.sol\":{\"keccak256\":\"0x8b60f4941b70f8acd98e961ed45d5c5d6b08a6c5ad910b68a79062a9af030424\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd33644e3139518564d9ab457ad171d6599b5c7cfe21478137a6011c182f10e5\",\"dweb:/ipfs/QmfNcPMKMEBg1GeinnSts6ezmiNTmaN2vrnXahN1G4MDwZ\"]},\"project:/contracts/spells/facets/ERC721Checkpointable/ERC721Checkpointable.sol\":{\"keccak256\":\"0xc718b9cc1a024c8e0cc1e25d42e7b7a4de721652d12192f4f084b56a8e58c365\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://4e69a447860cb00e1c55602dfe983c5aca6c4ae854bf5cece1833df0b8df86eb\",\"dweb:/ipfs/QmSzgJw3cHrxckHjxARg3Xj5nzK8eRtGm8KZ29QxVs9cVW\"]},\"project:/contracts/spells/facets/ERC721Checkpointable/ERC721CheckpointableStorage.sol\":{\"keccak256\":\"0xb202b2631878c32824a4867ac394856e5b322fdc7803088881466dee59af09e0\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://f19ba38dc11b9fdca1709ff36c4dc43ac8196622ebe55ddda2c22c5d1cb07a09\",\"dweb:/ipfs/QmYpkxPBgJSqxhkpHcTiPWaziNNJnBe7oKhjKrRS3UXixp\"]},\"project:/contracts/spells/facets/ERC721Checkpointable/IERC721Checkpointable.sol\":{\"keccak256\":\"0x1d3a4c46b9dad8a08a93234016296cc36cb3104e490b0b3425d61f4b3e613035\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://058f3584e28b2951d179467f7509fac58a6a8a01a02c72b622a8211e6e00b70b\",\"dweb:/ipfs/QmXV1y2SLTSttz4ir7PvCMzpL28ijwUdTE2eAa2FAdNXgA\"]},\"project:/contracts/spells/facets/SpellsCastStorage.sol\":{\"keccak256\":\"0x026d3e047bdefea77a67d75b00f478101e542e07e613a1a2da4ebb2a5866400b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20ea907af9f79641083fa8624673eb2b891cef2bf1508d672762d3ae4bb7e0a3\",\"dweb:/ipfs/QmbJyKr58uCPZeS8tURNyvzct3pciKCeBG9QLa1fVB2GYv\"]},\"project:/contracts/spells/facets/SpellsStorage.sol\":{\"keccak256\":\"0x06014fe91554a55cbe3e32f959963fe3decd7ea17ab3bedbade7c7381720276e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c368f34d7791b691fb66967df994efb3fb3f122ab12a8955e6bc16709398414a\",\"dweb:/ipfs/QmTjTQzSCVCVHaWvLd3mBDfCy5rvBG3nzA7mwoBDf2FzuM\"]},\"project:/contracts/spells/facets/SpellsTokenController.sol\":{\"keccak256\":\"0x8a62d88ed0ed328a6e8ed28bec184f8dd2b0a5c3b403613a50ad2d1e911c1014\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7101bed5214eab984265242ac767fbbf16125d7cbde6535bd4873c16d01e1\",\"dweb:/ipfs/QmVJh6XCyoftXFLH8u2rC252KU1Gm8WpPMpqssMCmooZYD\"]},\"project:/contracts/spells/facets/VRGDA/LinearVRGDA.sol\":{\"keccak256\":\"0x8655aadd7bc081aaa8f937511684e9b02f4faa1f16391dac413d006153fbc46a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa493091ee791cca7df2590d799908e564de426a190ecced5ec32dcc97b7c269\",\"dweb:/ipfs/QmVYzzygCKipU3dSbW7otu2W4AwkrG7rLu6B7zp77UM5j8\"]},\"project:/contracts/spells/facets/VRGDA/LinearVRGDAStorage.sol\":{\"keccak256\":\"0xdd4245ee55c1cdfd9a39a0f371980092a8fce0af22776c41a31b2ab8a9b3e2b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50ffc82ee3bf9deb6fae1471d2f67fdcd72a62dda2fe6ca513695c0905f71f1a\",\"dweb:/ipfs/QmWmNb2M4UW8hT2WqStxj6DoKeSXV53pkeBSnd3e2JnUmc\"]},\"project:/contracts/spells/facets/VRGDA/VRGDA.sol\":{\"keccak256\":\"0x61c1bdfabbcd93f8e91d2b9cc013c18898002f9dd7129a655e6c2db183c18f71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://355204bf971235f87a98f6c57ad734a22be4f154ce7febf0cb28c89e7069c3d8\",\"dweb:/ipfs/QmUkrYqD7ZX9JZYpp7qYs5pPArso2fSdzfefFTyHL1kgku\"]},\"project:/contracts/spells/facets/VRGDA/VRGDAStorage.sol\":{\"keccak256\":\"0xecccb688e986d763273b240ae61a9a0d5659d21c230647b440e4a39d4a819bcc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee6004d2b5062fab7c2c327d8339c2184c01e3dca0d20608177272c42a8a79b8\",\"dweb:/ipfs/Qmb8FW8FyRKBjLEiCZiaigeuaL6D5x8V169h3ozDuxpUuN\"]},\"project:/contracts/spells/facets/VRGDA/math/SignedWadMath.sol\":{\"keccak256\":\"0x5ee0d583fd3b26234379219a669bdbaf5ae2dcfd0e05bd89e0625f9dfa6dac4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ea6cfd9c61c7932d5eb979179c2e65e53522eca18c47d538a5cb8f2abf981aa\",\"dweb:/ipfs/QmP7LFXwoDbdUJECGoKPniUBhPbPAVq561EvJB7HoUoFSd\"]},\"project:/contracts/spells/facets/shared/Access/CallProtection.sol\":{\"keccak256\":\"0x729bfcce118bd9d387d8ffa18f5c9ec51912d3745ff421ca34c19938ef35684f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6ce3609ab1f2a0a2d5117c5594d122bf561ee5ba56e00af005a07ffe57da365\",\"dweb:/ipfs/QmaiP3YgQCba93kxQtTaxjqvLrTTMEUNyA5Y916cQTABei\"]},\"project:/contracts/spells/facets/shared/reentry/LibReentryProtectionStorage.sol\":{\"keccak256\":\"0xdbe607cabd63e9a461d0009cc896dee7cddba4ca72dfecf35fdf11948b297f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://815faa1a1868cacb3085e9aade3bc72fcff8cd4bb326bfd394d5fb9d3eb36f0a\",\"dweb:/ipfs/QmQEUEtw53UU4hLGqKruyN4mzYjfPJLYhh8M8W6AebdAjn\"]},\"project:/contracts/spells/facets/shared/reentry/ReentryProtection.sol\":{\"keccak256\":\"0xd1ccceeb0c75462a64d4b9b204521829284494f44fffebbfb43fa9b1b5d40915\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26fe5791876cbe288d38dd44602cd87073d379f7ad93447bee2dbc459f6a583\",\"dweb:/ipfs/QmULmVcPh31Fij8udRby298QKRSbJdmeroSCxPmZpnXV48\"]},\"project:/contracts/spells/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0x7aca95eacea757ff86be09ed6f309fde42e402530ac7beae002e3c2586439a01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c9ddbab4ac249745725ee6b0ad42526a4cc1db4dbf8688ce0acec8fcf20fb41\",\"dweb:/ipfs/QmfKGbJ58m4Yr3Bo2pMysnV5off6VJSdhok3Z9pnp1qek7\"]},\"project:/contracts/spells/libraries/LibDiamond.sol\":{\"keccak256\":\"0x6e60546809163313c4d63ca09dcb1d8809014afbfee695d055852b54b2b40a05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac1932dd4be798a9a54a3a7e337c9e4437f8851ff207363562f99b30870bc98d\",\"dweb:/ipfs/QmZ5JvSPN5krbJi8GqsX3J9FZuWaQdjmj2r7HLcC9AhKPA\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061088d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631215bd811461006757806325bdb2a814610083578063441b04eb146100a15780635a67de07146100bd578063817b430c146100d957806391b7f5ed146100f7575b600080fd5b610081600480360381019061007c9190610661565b610113565b005b61008b610227565b60405161009891906106aa565b60405180910390f35b6100bb60048036038101906100b69190610661565b610259565b005b6100d760048036038101906100d291906106f1565b610375565b005b6100e161048f565b6040516100ee919061072d565b60405180910390f35b610111600480360381019061010c919061077e565b6104c2565b005b61011b6105a4565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101a3576040517fa6ffef2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806101ac6105a4565b60040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fe643078997787c9962bce9dd237244e570a704a8cd9bf7332784d8d63225a8c28160405161021c919061072d565b60405180910390a150565b60006102316105a4565b60030160009054906101000a900460ff166003811115610254576102536107ab565b5b905090565b6102616105d1565b60030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806102e957503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031f90610837565b60405180910390fd5b806103316105a4565b60030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61037d6105d1565b60030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061040557503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610444576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043b90610837565b60405180910390fd5b8060ff16600381111561045a576104596107ab565b5b6104626105a4565b60030160006101000a81548160ff02191690836003811115610487576104866107ab565b5b021790555050565b60006104996105a4565b60030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104ca6105d1565b60030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061055257503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610591576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058890610837565b60405180910390fd5b8061059a6105a4565b6000018190555050565b6000807f32b2e02f32560e257eaad13ed8a4f0ffa175bcb89327c67da202bdcd5579cc1290508091505090565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061062e82610603565b9050919050565b61063e81610623565b811461064957600080fd5b50565b60008135905061065b81610635565b92915050565b600060208284031215610677576106766105fe565b5b60006106858482850161064c565b91505092915050565b600060ff82169050919050565b6106a48161068e565b82525050565b60006020820190506106bf600083018461069b565b92915050565b6106ce8161068e565b81146106d957600080fd5b50565b6000813590506106eb816106c5565b92915050565b600060208284031215610707576107066105fe565b5b6000610715848285016106dc565b91505092915050565b61072781610623565b82525050565b6000602082019050610742600083018461071e565b92915050565b6000819050919050565b61075b81610748565b811461076657600080fd5b50565b60008135905061077881610752565b92915050565b600060208284031215610794576107936105fe565b5b60006107a284828501610769565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082825260208201905092915050565b7f4e4f545f414c4c4f574544000000000000000000000000000000000000000000600082015250565b6000610821600b836107da565b915061082c826107eb565b602082019050919050565b6000602082019050818103600083015261085081610814565b905091905056fea2646970667358221220e38f55110c8de3f66afa2cd96921b67236278544b23bf7e5e8469ce4731f9bad64736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80631215bd811461006757806325bdb2a814610083578063441b04eb146100a15780635a67de07146100bd578063817b430c146100d957806391b7f5ed146100f7575b600080fd5b610081600480360381019061007c9190610661565b610113565b005b61008b610227565b60405161009891906106aa565b60405180910390f35b6100bb60048036038101906100b69190610661565b610259565b005b6100d760048036038101906100d291906106f1565b610375565b005b6100e161048f565b6040516100ee919061072d565b60405180910390f35b610111600480360381019061010c919061077e565b6104c2565b005b61011b6105a4565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101a3576040517fa6ffef2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806101ac6105a4565b60040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fe643078997787c9962bce9dd237244e570a704a8cd9bf7332784d8d63225a8c28160405161021c919061072d565b60405180910390a150565b60006102316105a4565b60030160009054906101000a900460ff166003811115610254576102536107ab565b5b905090565b6102616105d1565b60030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806102e957503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031f90610837565b60405180910390fd5b806103316105a4565b60030160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61037d6105d1565b60030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061040557503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610444576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043b90610837565b60405180910390fd5b8060ff16600381111561045a576104596107ab565b5b6104626105a4565b60030160006101000a81548160ff02191690836003811115610487576104866107ab565b5b021790555050565b60006104996105a4565b60030160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104ca6105d1565b60030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061055257503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610591576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058890610837565b60405180910390fd5b8061059a6105a4565b6000018190555050565b6000807f32b2e02f32560e257eaad13ed8a4f0ffa175bcb89327c67da202bdcd5579cc1290508091505090565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061062e82610603565b9050919050565b61063e81610623565b811461064957600080fd5b50565b60008135905061065b81610635565b92915050565b600060208284031215610677576106766105fe565b5b60006106858482850161064c565b91505092915050565b600060ff82169050919050565b6106a48161068e565b82525050565b60006020820190506106bf600083018461069b565b92915050565b6106ce8161068e565b81146106d957600080fd5b50565b6000813590506106eb816106c5565b92915050565b600060208284031215610707576107066105fe565b5b6000610715848285016106dc565b91505092915050565b61072781610623565b82525050565b6000602082019050610742600083018461071e565b92915050565b6000819050919050565b61075b81610748565b811461076657600080fd5b50565b60008135905061077881610752565b92915050565b600060208284031215610794576107936105fe565b5b60006107a284828501610769565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082825260208201905092915050565b7f4e4f545f414c4c4f574544000000000000000000000000000000000000000000600082015250565b6000610821600b836107da565b915061082c826107eb565b602082019050919050565b6000602082019050818103600083015261085081610814565b905091905056fea2646970667358221220e38f55110c8de3f66afa2cd96921b67236278544b23bf7e5e8469ce4731f9bad64736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4567:63",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:63",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:63",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:63"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:63"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:63",
                "type": ""
              }
            ],
            "src": "7:75:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:63",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:63",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:63"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:63",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:63",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:63"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:63",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:63"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:63"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:63",
                "type": ""
              }
            ],
            "src": "334:126:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:63"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:63"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:63"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:63",
                "type": ""
              }
            ],
            "src": "466:96:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:63"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:63"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:63"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:63"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:63"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:63"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:63",
                "type": ""
              }
            ],
            "src": "568:122:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:63"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:63"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:63"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:63"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:63",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:63",
                "type": ""
              }
            ],
            "src": "696:139:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:63"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:63"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:63"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:63"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:63",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:63",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:63",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:63",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:63",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:63"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:63"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:63"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:63"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:63"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:63",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:63",
                "type": ""
              }
            ],
            "src": "841:329:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1219:43:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1229:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1244:5:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1251:4:63",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1240:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1240:16:63"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1229:7:63"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1201:5:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1211:7:63",
                "type": ""
              }
            ],
            "src": "1176:86:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1329:51:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1346:3:63"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1367:5:63"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "1351:15:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1351:22:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1339:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1339:35:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1339:35:63"
                }
              ]
            },
            "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1317:5:63",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1324:3:63",
                "type": ""
              }
            ],
            "src": "1268:112:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1480:120:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1490:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1502:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1513:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1498:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1498:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1490:4:63"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1566:6:63"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1579:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1590:1:63",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1575:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1575:17:63"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1526:39:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1526:67:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1526:67:63"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1452:9:63",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1464:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1475:4:63",
                "type": ""
              }
            ],
            "src": "1386:214:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1647:77:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1702:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1711:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1714:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1704:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1704:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1704:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1670:5:63"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1693:5:63"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint8",
                              "nodeType": "YulIdentifier",
                              "src": "1677:15:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1677:22:63"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1667:2:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1667:33:63"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1660:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1660:41:63"
                  },
                  "nodeType": "YulIf",
                  "src": "1657:61:63"
                }
              ]
            },
            "name": "validator_revert_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1640:5:63",
                "type": ""
              }
            ],
            "src": "1606:118:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1780:85:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1790:29:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1812:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1799:12:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1799:20:63"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1790:5:63"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1853:5:63"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "1828:24:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1828:31:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1828:31:63"
                }
              ]
            },
            "name": "abi_decode_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1758:6:63",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1766:3:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1774:5:63",
                "type": ""
              }
            ],
            "src": "1730:135:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1935:261:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1981:83:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1983:77:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1983:79:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1983:79:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1956:7:63"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1965:9:63"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1952:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1952:23:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1977:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1948:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1948:32:63"
                  },
                  "nodeType": "YulIf",
                  "src": "1945:119:63"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2074:115:63",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2089:15:63",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2103:1:63",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2093:6:63",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2118:61:63",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2151:9:63"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2162:6:63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2147:3:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2147:22:63"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2171:7:63"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "2128:18:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2128:51:63"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2118:6:63"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1905:9:63",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1916:7:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1928:6:63",
                "type": ""
              }
            ],
            "src": "1871:325:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2267:53:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2284:3:63"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2307:5:63"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2289:17:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2289:24:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2277:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2277:37:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2277:37:63"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2255:5:63",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2262:3:63",
                "type": ""
              }
            ],
            "src": "2202:118:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2424:124:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2434:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2446:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2457:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2442:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2442:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2434:4:63"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2514:6:63"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2527:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2538:1:63",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2523:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2523:17:63"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2470:43:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2470:71:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2470:71:63"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2396:9:63",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2408:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2419:4:63",
                "type": ""
              }
            ],
            "src": "2326:222:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2599:32:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2609:16:63",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2620:5:63"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2609:7:63"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2581:5:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2591:7:63",
                "type": ""
              }
            ],
            "src": "2554:77:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2680:79:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2737:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2746:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2749:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2739:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2739:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2739:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2703:5:63"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2728:5:63"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2710:17:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2710:24:63"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2700:2:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2700:35:63"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2693:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2693:43:63"
                  },
                  "nodeType": "YulIf",
                  "src": "2690:63:63"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2673:5:63",
                "type": ""
              }
            ],
            "src": "2637:122:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2817:87:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2827:29:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2849:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2836:12:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2836:20:63"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2827:5:63"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2892:5:63"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2865:26:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2865:33:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2865:33:63"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2795:6:63",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2803:3:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2811:5:63",
                "type": ""
              }
            ],
            "src": "2765:139:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2976:263:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3022:83:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3024:77:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3024:79:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3024:79:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2997:7:63"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3006:9:63"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2993:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2993:23:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3018:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2989:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2989:32:63"
                  },
                  "nodeType": "YulIf",
                  "src": "2986:119:63"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3115:117:63",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3130:15:63",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3144:1:63",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3134:6:63",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3159:63:63",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3194:9:63"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3205:6:63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3190:3:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3190:22:63"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3214:7:63"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3169:20:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3169:53:63"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3159:6:63"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2946:9:63",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2957:7:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2969:6:63",
                "type": ""
              }
            ],
            "src": "2910:329:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3273:152:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3290:1:63",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3293:77:63",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3283:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3283:88:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3283:88:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3387:1:63",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3390:4:63",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3380:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3380:15:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3380:15:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3411:1:63",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3414:4:63",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3404:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3404:15:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3404:15:63"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "3245:180:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3527:73:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3544:3:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3549:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3537:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3537:19:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3537:19:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3565:29:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3584:3:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3589:4:63",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3580:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3580:14:63"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3565:11:63"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3499:3:63",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3504:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3515:11:63",
                "type": ""
              }
            ],
            "src": "3431:169:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3712:55:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3734:6:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3742:1:63",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3730:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3730:14:63"
                      },
                      {
                        "hexValue": "4e4f545f414c4c4f574544",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3746:13:63",
                        "type": "",
                        "value": "NOT_ALLOWED"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3723:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3723:37:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3723:37:63"
                }
              ]
            },
            "name": "store_literal_in_memory_70f9579eddccc70623d7ac4e27adf179eecac23fd1787cc1cd54998ff92d9caf",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3704:6:63",
                "type": ""
              }
            ],
            "src": "3606:161:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3919:220:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3929:74:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3995:3:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4000:2:63",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3936:58:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3936:67:63"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3929:3:63"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4101:3:63"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_70f9579eddccc70623d7ac4e27adf179eecac23fd1787cc1cd54998ff92d9caf",
                      "nodeType": "YulIdentifier",
                      "src": "4012:88:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4012:93:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4012:93:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4114:19:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4125:3:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4130:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4121:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4121:12:63"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4114:3:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_70f9579eddccc70623d7ac4e27adf179eecac23fd1787cc1cd54998ff92d9caf_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3907:3:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3915:3:63",
                "type": ""
              }
            ],
            "src": "3773:366:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4316:248:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4326:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4338:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4349:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4334:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4334:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4326:4:63"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4373:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4384:1:63",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4369:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4369:17:63"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4392:4:63"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4398:9:63"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4388:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4388:20:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4362:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4362:47:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4362:47:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4418:139:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4552:4:63"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_70f9579eddccc70623d7ac4e27adf179eecac23fd1787cc1cd54998ff92d9caf_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4426:124:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4426:131:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4418:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_70f9579eddccc70623d7ac4e27adf179eecac23fd1787cc1cd54998ff92d9caf__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4296:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4311:4:63",
                "type": ""
              }
            ],
            "src": "4145:419:63"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_70f9579eddccc70623d7ac4e27adf179eecac23fd1787cc1cd54998ff92d9caf(memPtr) {\n\n        mstore(add(memPtr, 0), \"NOT_ALLOWED\")\n\n    }\n\n    function abi_encode_t_stringliteral_70f9579eddccc70623d7ac4e27adf179eecac23fd1787cc1cd54998ff92d9caf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_70f9579eddccc70623d7ac4e27adf179eecac23fd1787cc1cd54998ff92d9caf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_70f9579eddccc70623d7ac4e27adf179eecac23fd1787cc1cd54998ff92d9caf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_70f9579eddccc70623d7ac4e27adf179eecac23fd1787cc1cd54998ff92d9caf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 63,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "955:1336:46:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "955:1336:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2033:126;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1120:131;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1864:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1257:116;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2164:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1613:164;1435:26;:24;:26::i;:::-;:35;;;;;;;;;;;;1421:49;;:10;:49;;;1418:80;;1479:19;;;;;;;;;;;;;;1418:80;1722:9:::1;1684:26;:24;:26::i;:::-;:35;;;:47;;;;;;;;;;;;;;;;;;1745:26;1761:9;1745:26;;;;;;:::i;:::-;;;;;;;;1613:164:::0;:::o;2033:126::-;2080:12;2116:26;:24;:26::i;:::-;:36;;;;;;;;;;;;2110:43;;;;;;;;:::i;:::-;;2103:50;;2033:126;:::o;1120:131::-;202:27:52;:25;:27::i;:::-;:41;;;;;;;;;;;;188:55;;:10;:55;;;:102;;;;285:4;263:27;;:10;:27;;;188:102;167:160;;;;;;;;;;;;:::i;:::-;;;;;;;;;1234:10:46::1;1195:26;:24;:26::i;:::-;:36;;;:49;;;;;;;;;;;;;;;;;;1120:131:::0;:::o;1864:164::-;202:27:52;:25;:27::i;:::-;:41;;;;;;;;;;;;188:55;;:10;:55;;;:102;;;;285:4;263:27;;:10;:27;;;188:102;167:160;;;;;;;;;;;;:::i;:::-;;;;;;;;;2007:6:46::1;1971:51;;;;;;;;;;:::i;:::-;;1932:26;:24;:26::i;:::-;:36;;;:90;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1864:164:::0;:::o;1257:116::-;1304:7;1330:26;:24;:26::i;:::-;:36;;;;;;;;;;;;1323:43;;1257:116;:::o;2164:121::-;202:27:52;:25;:27::i;:::-;:41;;;;;;;;;;;;188:55;;:10;:55;;;:102;;;;285:4;263:27;;:10;:27;;;188:102;167:160;;;;;;;;;;;;:::i;:::-;;;;;;;;;2273:6:46::1;2230:26;:24;:26::i;:::-;:40;;:49;;;;2164:121:::0;:::o;862:191:44:-;907:18;937:16;142:42;937:48;;1029:8;1018:19;;1004:43;862:191;:::o;1463:225:60:-;1536:25;1577:16;498:45;1577:43;;1664:8;1653:19;;1639:43;1463:225;:::o;88:117:63:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:86::-;1211:7;1251:4;1244:5;1240:16;1229:27;;1176:86;;;:::o;1268:112::-;1351:22;1367:5;1351:22;:::i;:::-;1346:3;1339:35;1268:112;;:::o;1386:214::-;1475:4;1513:2;1502:9;1498:18;1490:26;;1526:67;1590:1;1579:9;1575:17;1566:6;1526:67;:::i;:::-;1386:214;;;;:::o;1606:118::-;1677:22;1693:5;1677:22;:::i;:::-;1670:5;1667:33;1657:61;;1714:1;1711;1704:12;1657:61;1606:118;:::o;1730:135::-;1774:5;1812:6;1799:20;1790:29;;1828:31;1853:5;1828:31;:::i;:::-;1730:135;;;;:::o;1871:325::-;1928:6;1977:2;1965:9;1956:7;1952:23;1948:32;1945:119;;;1983:79;;:::i;:::-;1945:119;2103:1;2128:51;2171:7;2162:6;2151:9;2147:22;2128:51;:::i;:::-;2118:61;;2074:115;1871:325;;;;:::o;2202:118::-;2289:24;2307:5;2289:24;:::i;:::-;2284:3;2277:37;2202:118;;:::o;2326:222::-;2419:4;2457:2;2446:9;2442:18;2434:26;;2470:71;2538:1;2527:9;2523:17;2514:6;2470:71;:::i;:::-;2326:222;;;;:::o;2554:77::-;2591:7;2620:5;2609:16;;2554:77;;;:::o;2637:122::-;2710:24;2728:5;2710:24;:::i;:::-;2703:5;2700:35;2690:63;;2749:1;2746;2739:12;2690:63;2637:122;:::o;2765:139::-;2811:5;2849:6;2836:20;2827:29;;2865:33;2892:5;2865:33;:::i;:::-;2765:139;;;;:::o;2910:329::-;2969:6;3018:2;3006:9;2997:7;2993:23;2989:32;2986:119;;;3024:79;;:::i;:::-;2986:119;3144:1;3169:53;3214:7;3205:6;3194:9;3190:22;3169:53;:::i;:::-;3159:63;;3115:117;2910:329;;;;:::o;3245:180::-;3293:77;3290:1;3283:88;3390:4;3387:1;3380:15;3414:4;3411:1;3404:15;3431:169;3515:11;3549:6;3544:3;3537:19;3589:4;3584:3;3580:14;3565:29;;3431:169;;;;:::o;3606:161::-;3746:13;3742:1;3734:6;3730:14;3723:37;3606:161;:::o;3773:366::-;3915:3;3936:67;4000:2;3995:3;3936:67;:::i;:::-;3929:74;;4012:93;4101:3;4012:93;:::i;:::-;4130:2;4125:3;4121:12;4114:19;;3773:366;;;:::o;4145:419::-;4311:4;4349:2;4338:9;4334:18;4326:26;;4398:9;4392:4;4388:20;4384:1;4373:9;4369:17;4362:47;4426:131;4552:4;4426:131;:::i;:::-;4418:139;;4145:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport { ERC165Storage } from \"@solidstate/contracts/introspection/ERC165Storage.sol\";\n\nimport { LibDiamond } from \"../libraries/LibDiamond.sol\";\nimport { IDust } from \"../../dust/IDust.sol\";\nimport { ECDSA } from \"../../helpers/ECDSA.sol\";\nimport { SpellsCastStorage } from \"./SpellsCastStorage.sol\";\nimport { SpellsStorage } from \"./SpellsStorage.sol\";\nimport { ERC721Checkpointable } from \"./ERC721Checkpointable/ERC721Checkpointable.sol\";\nimport {ERC721AQueryableUpgradeable} from \"./ERC721A/extensions/ERC721AQueryableUpgradeable.sol\";\nimport { CallProtection } from \"./shared/Access/CallProtection.sol\";\nimport { LinearVRGDA } from \"./VRGDA/LinearVRGDA.sol\";\nimport { toDaysWadUnsafe } from  \"./VRGDA/math/SignedWadMath.sol\";\nimport { ReentryProtection } from \"./shared/reentry/ReentryProtection.sol\";\nimport { ERC721Checkpointable } from \"./ERC721Checkpointable/ERC721Checkpointable.sol\";\n\n\ncontract SpellsTokenController is ReentryProtection, CallProtection {\n    \n    event GodspellUpdated(address godspell);\n    \n    error SenderNotGodspell();\n    \n    function setSpellGate(address _spellGate) external protectedCall {\n        SpellsStorage.getStorage().spellGate = _spellGate;\n    }\n\n    function getSpellGate() external view returns (address) {\n        return SpellsStorage.getStorage().spellGate;\n    }\n    \n    modifier onlyGodspell() {\n         if(msg.sender != SpellsStorage.getStorage().godspell) revert SenderNotGodspell();\n        _;\n    }\n   \n    /**\n    * @notice Set the godspell.\n    * @dev Only callable by the godspell.\n    */\n   function setGodsepll(address _godspell) external onlyGodspell {\n       SpellsStorage.getStorage().godspell = _godspell;\n       emit GodspellUpdated(_godspell);\n   }\n\n   /**\n    * @dev Sets sale state to CLOSED (0), PRESALE (1), or OPEN (2).\n    */\n   function setSaleState(uint8 _state) external protectedCall {\n       SpellsStorage.getStorage().saleState = SpellsStorage.SaleState(\n           _state\n       );\n   }\n\n   function getSaleState() external view returns (uint8 _state) {\n       return uint8(SpellsStorage.getStorage().saleState);\n   }\n\n   function setPrice(uint256 price_) external protectedCall {\n       SpellsStorage.getStorage().seedMintPrice = price_;\n   }\n   \n}",
  "sourcePath": "/Users/alexirobbins/Sites/code/spells/contracts/spells/facets/SpellsTokenController.sol",
  "ast": {
    "absolutePath": "project:/contracts/spells/facets/SpellsTokenController.sol",
    "exportedSymbols": {
      "CallProtection": [
        13087
      ],
      "ECDSA": [
        4096
      ],
      "ERC165Storage": [
        1845
      ],
      "ERC721AQueryableUpgradeable": [
        8330
      ],
      "ERC721Checkpointable": [
        8914
      ],
      "IDust": [
        4004
      ],
      "LibDiamond": [
        14340
      ],
      "LinearVRGDA": [
        12372
      ],
      "ReentryProtection": [
        13172
      ],
      "SpellsCastStorage": [
        10012
      ],
      "SpellsStorage": [
        11407
      ],
      "SpellsTokenController": [
        12313
      ],
      "toDaysWadUnsafe": [
        12579
      ]
    },
    "id": 12314,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12163,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:46"
      },
      {
        "absolutePath": "@solidstate/contracts/introspection/ERC165Storage.sol",
        "file": "@solidstate/contracts/introspection/ERC165Storage.sol",
        "id": 12165,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12314,
        "sourceUnit": 1846,
        "src": "57:86:46",
        "symbolAliases": [
          {
            "foreign": {
              "id": 12164,
              "name": "ERC165Storage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1845,
              "src": "66:13:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/spells/libraries/LibDiamond.sol",
        "file": "../libraries/LibDiamond.sol",
        "id": 12167,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12314,
        "sourceUnit": 14341,
        "src": "145:57:46",
        "symbolAliases": [
          {
            "foreign": {
              "id": 12166,
              "name": "LibDiamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14340,
              "src": "154:10:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/dust/IDust.sol",
        "file": "../../dust/IDust.sol",
        "id": 12169,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12314,
        "sourceUnit": 4005,
        "src": "203:45:46",
        "symbolAliases": [
          {
            "foreign": {
              "id": 12168,
              "name": "IDust",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4004,
              "src": "212:5:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/helpers/ECDSA.sol",
        "file": "../../helpers/ECDSA.sol",
        "id": 12171,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12314,
        "sourceUnit": 4097,
        "src": "249:48:46",
        "symbolAliases": [
          {
            "foreign": {
              "id": 12170,
              "name": "ECDSA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4096,
              "src": "258:5:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/spells/facets/SpellsCastStorage.sol",
        "file": "./SpellsCastStorage.sol",
        "id": 12173,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12314,
        "sourceUnit": 10013,
        "src": "298:60:46",
        "symbolAliases": [
          {
            "foreign": {
              "id": 12172,
              "name": "SpellsCastStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10012,
              "src": "307:17:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/spells/facets/SpellsStorage.sol",
        "file": "./SpellsStorage.sol",
        "id": 12175,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12314,
        "sourceUnit": 11408,
        "src": "359:52:46",
        "symbolAliases": [
          {
            "foreign": {
              "id": 12174,
              "name": "SpellsStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11407,
              "src": "368:13:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/spells/facets/ERC721Checkpointable/ERC721Checkpointable.sol",
        "file": "./ERC721Checkpointable/ERC721Checkpointable.sol",
        "id": 12177,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12314,
        "sourceUnit": 8915,
        "src": "412:87:46",
        "symbolAliases": [
          {
            "foreign": {
              "id": 12176,
              "name": "ERC721Checkpointable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8914,
              "src": "421:20:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/spells/facets/ERC721A/extensions/ERC721AQueryableUpgradeable.sol",
        "file": "./ERC721A/extensions/ERC721AQueryableUpgradeable.sol",
        "id": 12179,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12314,
        "sourceUnit": 8331,
        "src": "500:97:46",
        "symbolAliases": [
          {
            "foreign": {
              "id": 12178,
              "name": "ERC721AQueryableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8330,
              "src": "508:27:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/spells/facets/shared/Access/CallProtection.sol",
        "file": "./shared/Access/CallProtection.sol",
        "id": 12181,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12314,
        "sourceUnit": 13088,
        "src": "598:68:46",
        "symbolAliases": [
          {
            "foreign": {
              "id": 12180,
              "name": "CallProtection",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13087,
              "src": "607:14:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/spells/facets/VRGDA/LinearVRGDA.sol",
        "file": "./VRGDA/LinearVRGDA.sol",
        "id": 12183,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12314,
        "sourceUnit": 12373,
        "src": "667:54:46",
        "symbolAliases": [
          {
            "foreign": {
              "id": 12182,
              "name": "LinearVRGDA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12372,
              "src": "676:11:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/spells/facets/VRGDA/math/SignedWadMath.sol",
        "file": "./VRGDA/math/SignedWadMath.sol",
        "id": 12185,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12314,
        "sourceUnit": 13061,
        "src": "722:66:46",
        "symbolAliases": [
          {
            "foreign": {
              "id": 12184,
              "name": "toDaysWadUnsafe",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12579,
              "src": "731:15:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/spells/facets/shared/reentry/ReentryProtection.sol",
        "file": "./shared/reentry/ReentryProtection.sol",
        "id": 12187,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12314,
        "sourceUnit": 13173,
        "src": "789:75:46",
        "symbolAliases": [
          {
            "foreign": {
              "id": 12186,
              "name": "ReentryProtection",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13172,
              "src": "798:17:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/spells/facets/ERC721Checkpointable/ERC721Checkpointable.sol",
        "file": "./ERC721Checkpointable/ERC721Checkpointable.sol",
        "id": 12189,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12314,
        "sourceUnit": 8915,
        "src": "865:87:46",
        "symbolAliases": [
          {
            "foreign": {
              "id": 12188,
              "name": "ERC721Checkpointable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8914,
              "src": "874:20:46",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12190,
              "name": "ReentryProtection",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13172,
              "src": "989:17:46"
            },
            "id": 12191,
            "nodeType": "InheritanceSpecifier",
            "src": "989:17:46"
          },
          {
            "baseName": {
              "id": 12192,
              "name": "CallProtection",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13087,
              "src": "1008:14:46"
            },
            "id": 12193,
            "nodeType": "InheritanceSpecifier",
            "src": "1008:14:46"
          }
        ],
        "canonicalName": "SpellsTokenController",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 12313,
        "linearizedBaseContracts": [
          12313,
          13087,
          13172
        ],
        "name": "SpellsTokenController",
        "nameLocation": "964:21:46",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "e643078997787c9962bce9dd237244e570a704a8cd9bf7332784d8d63225a8c2",
            "id": 12197,
            "name": "GodspellUpdated",
            "nameLocation": "1040:15:46",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12195,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "godspell",
                  "nameLocation": "1064:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 12197,
                  "src": "1056:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1056:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1055:18:46"
            },
            "src": "1034:40:46"
          },
          {
            "errorSelector": "a6ffef20",
            "id": 12199,
            "name": "SenderNotGodspell",
            "nameLocation": "1090:17:46",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 12198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1107:2:46"
            },
            "src": "1084:26:46"
          },
          {
            "body": {
              "id": 12214,
              "nodeType": "Block",
              "src": "1185:66:46",
              "statements": [
                {
                  "expression": {
                    "id": 12212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 12206,
                            "name": "SpellsStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11407,
                            "src": "1195:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SpellsStorage_$11407_$",
                              "typeString": "type(library SpellsStorage)"
                            }
                          },
                          "id": 12208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getStorage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11368,
                          "src": "1195:24:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Storage_$11356_storage_ptr_$",
                            "typeString": "function () pure returns (struct SpellsStorage.Storage storage pointer)"
                          }
                        },
                        "id": 12209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1195:26:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Storage_$11356_storage_ptr",
                          "typeString": "struct SpellsStorage.Storage storage pointer"
                        }
                      },
                      "id": 12210,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "spellGate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11345,
                      "src": "1195:36:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12211,
                      "name": "_spellGate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12201,
                      "src": "1234:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1195:49:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12213,
                  "nodeType": "ExpressionStatement",
                  "src": "1195:49:46"
                }
              ]
            },
            "functionSelector": "441b04eb",
            "id": 12215,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12204,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12203,
                  "name": "protectedCall",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13086,
                  "src": "1171:13:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "1171:13:46"
              }
            ],
            "name": "setSpellGate",
            "nameLocation": "1129:12:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12201,
                  "mutability": "mutable",
                  "name": "_spellGate",
                  "nameLocation": "1150:10:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 12215,
                  "src": "1142:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1142:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1141:20:46"
            },
            "returnParameters": {
              "id": 12205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1185:0:46"
            },
            "scope": 12313,
            "src": "1120:131:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12225,
              "nodeType": "Block",
              "src": "1313:60:46",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 12220,
                          "name": "SpellsStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11407,
                          "src": "1330:13:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SpellsStorage_$11407_$",
                            "typeString": "type(library SpellsStorage)"
                          }
                        },
                        "id": 12221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getStorage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11368,
                        "src": "1330:24:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Storage_$11356_storage_ptr_$",
                          "typeString": "function () pure returns (struct SpellsStorage.Storage storage pointer)"
                        }
                      },
                      "id": 12222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1330:26:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Storage_$11356_storage_ptr",
                        "typeString": "struct SpellsStorage.Storage storage pointer"
                      }
                    },
                    "id": 12223,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "spellGate",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 11345,
                    "src": "1330:36:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 12219,
                  "id": 12224,
                  "nodeType": "Return",
                  "src": "1323:43:46"
                }
              ]
            },
            "functionSelector": "817b430c",
            "id": 12226,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSpellGate",
            "nameLocation": "1266:12:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1278:2:46"
            },
            "returnParameters": {
              "id": 12219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12218,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12226,
                  "src": "1304:7:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1304:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1303:9:46"
            },
            "scope": 12313,
            "src": "1257:116:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12240,
              "nodeType": "Block",
              "src": "1407:109:46",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 12228,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1421:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1421:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 12230,
                            "name": "SpellsStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11407,
                            "src": "1435:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SpellsStorage_$11407_$",
                              "typeString": "type(library SpellsStorage)"
                            }
                          },
                          "id": 12231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getStorage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11368,
                          "src": "1435:24:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Storage_$11356_storage_ptr_$",
                            "typeString": "function () pure returns (struct SpellsStorage.Storage storage pointer)"
                          }
                        },
                        "id": 12232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1435:26:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Storage_$11356_storage_ptr",
                          "typeString": "struct SpellsStorage.Storage storage pointer"
                        }
                      },
                      "id": 12233,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "godspell",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11347,
                      "src": "1435:35:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1421:49:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12238,
                  "nodeType": "IfStatement",
                  "src": "1418:80:46",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 12235,
                        "name": "SenderNotGodspell",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12199,
                        "src": "1479:17:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 12236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1479:19:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 12237,
                    "nodeType": "RevertStatement",
                    "src": "1472:26:46"
                  }
                },
                {
                  "id": 12239,
                  "nodeType": "PlaceholderStatement",
                  "src": "1508:1:46"
                }
              ]
            },
            "id": 12241,
            "name": "onlyGodspell",
            "nameLocation": "1392:12:46",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 12227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1404:2:46"
            },
            "src": "1383:133:46",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12261,
              "nodeType": "Block",
              "src": "1675:102:46",
              "statements": [
                {
                  "expression": {
                    "id": 12255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 12249,
                            "name": "SpellsStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11407,
                            "src": "1684:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SpellsStorage_$11407_$",
                              "typeString": "type(library SpellsStorage)"
                            }
                          },
                          "id": 12251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getStorage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11368,
                          "src": "1684:24:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Storage_$11356_storage_ptr_$",
                            "typeString": "function () pure returns (struct SpellsStorage.Storage storage pointer)"
                          }
                        },
                        "id": 12252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1684:26:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Storage_$11356_storage_ptr",
                          "typeString": "struct SpellsStorage.Storage storage pointer"
                        }
                      },
                      "id": 12253,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "godspell",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11347,
                      "src": "1684:35:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12254,
                      "name": "_godspell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12244,
                      "src": "1722:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1684:47:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12256,
                  "nodeType": "ExpressionStatement",
                  "src": "1684:47:46"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 12258,
                        "name": "_godspell",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12244,
                        "src": "1761:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12257,
                      "name": "GodspellUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12197,
                      "src": "1745:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1745:26:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12260,
                  "nodeType": "EmitStatement",
                  "src": "1740:31:46"
                }
              ]
            },
            "documentation": {
              "id": 12242,
              "nodeType": "StructuredDocumentation",
              "src": "1525:84:46",
              "text": " @notice Set the godspell.\n @dev Only callable by the godspell."
            },
            "functionSelector": "1215bd81",
            "id": 12262,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12247,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12246,
                  "name": "onlyGodspell",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12241,
                  "src": "1662:12:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "1662:12:46"
              }
            ],
            "name": "setGodsepll",
            "nameLocation": "1622:11:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12244,
                  "mutability": "mutable",
                  "name": "_godspell",
                  "nameLocation": "1642:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 12262,
                  "src": "1634:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1634:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1633:19:46"
            },
            "returnParameters": {
              "id": 12248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1675:0:46"
            },
            "scope": 12313,
            "src": "1613:164:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12281,
              "nodeType": "Block",
              "src": "1923:105:46",
              "statements": [
                {
                  "expression": {
                    "id": 12279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 12270,
                            "name": "SpellsStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11407,
                            "src": "1932:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SpellsStorage_$11407_$",
                              "typeString": "type(library SpellsStorage)"
                            }
                          },
                          "id": 12272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getStorage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11368,
                          "src": "1932:24:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Storage_$11356_storage_ptr_$",
                            "typeString": "function () pure returns (struct SpellsStorage.Storage storage pointer)"
                          }
                        },
                        "id": 12273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1932:26:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Storage_$11356_storage_ptr",
                          "typeString": "struct SpellsStorage.Storage storage pointer"
                        }
                      },
                      "id": 12274,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "saleState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11343,
                      "src": "1932:36:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SaleState_$11332",
                        "typeString": "enum SpellsStorage.SaleState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12277,
                          "name": "_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12265,
                          "src": "2007:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "expression": {
                          "id": 12275,
                          "name": "SpellsStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11407,
                          "src": "1971:13:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SpellsStorage_$11407_$",
                            "typeString": "type(library SpellsStorage)"
                          }
                        },
                        "id": 12276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SaleState",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11332,
                        "src": "1971:23:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SaleState_$11332_$",
                          "typeString": "type(enum SpellsStorage.SaleState)"
                        }
                      },
                      "id": 12278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1971:51:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SaleState_$11332",
                        "typeString": "enum SpellsStorage.SaleState"
                      }
                    },
                    "src": "1932:90:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SaleState_$11332",
                      "typeString": "enum SpellsStorage.SaleState"
                    }
                  },
                  "id": 12280,
                  "nodeType": "ExpressionStatement",
                  "src": "1932:90:46"
                }
              ]
            },
            "documentation": {
              "id": 12263,
              "nodeType": "StructuredDocumentation",
              "src": "1782:78:46",
              "text": " @dev Sets sale state to CLOSED (0), PRESALE (1), or OPEN (2)."
            },
            "functionSelector": "5a67de07",
            "id": 12282,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12268,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12267,
                  "name": "protectedCall",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13086,
                  "src": "1909:13:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "1909:13:46"
              }
            ],
            "name": "setSaleState",
            "nameLocation": "1873:12:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12265,
                  "mutability": "mutable",
                  "name": "_state",
                  "nameLocation": "1892:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 12282,
                  "src": "1886:12:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 12264,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1886:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1885:14:46"
            },
            "returnParameters": {
              "id": 12269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1923:0:46"
            },
            "scope": 12313,
            "src": "1864:164:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12295,
              "nodeType": "Block",
              "src": "2094:65:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 12289,
                              "name": "SpellsStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11407,
                              "src": "2116:13:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SpellsStorage_$11407_$",
                                "typeString": "type(library SpellsStorage)"
                              }
                            },
                            "id": 12290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getStorage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11368,
                            "src": "2116:24:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Storage_$11356_storage_ptr_$",
                              "typeString": "function () pure returns (struct SpellsStorage.Storage storage pointer)"
                            }
                          },
                          "id": 12291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2116:26:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Storage_$11356_storage_ptr",
                            "typeString": "struct SpellsStorage.Storage storage pointer"
                          }
                        },
                        "id": 12292,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "saleState",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11343,
                        "src": "2116:36:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_SaleState_$11332",
                          "typeString": "enum SpellsStorage.SaleState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_SaleState_$11332",
                          "typeString": "enum SpellsStorage.SaleState"
                        }
                      ],
                      "id": 12288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2110:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 12287,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2110:5:46",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 12293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2110:43:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 12286,
                  "id": 12294,
                  "nodeType": "Return",
                  "src": "2103:50:46"
                }
              ]
            },
            "functionSelector": "25bdb2a8",
            "id": 12296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSaleState",
            "nameLocation": "2042:12:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2054:2:46"
            },
            "returnParameters": {
              "id": 12286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12285,
                  "mutability": "mutable",
                  "name": "_state",
                  "nameLocation": "2086:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 12296,
                  "src": "2080:12:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 12284,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2080:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2079:14:46"
            },
            "scope": 12313,
            "src": "2033:126:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12311,
              "nodeType": "Block",
              "src": "2221:64:46",
              "statements": [
                {
                  "expression": {
                    "id": 12309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 12303,
                            "name": "SpellsStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11407,
                            "src": "2230:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SpellsStorage_$11407_$",
                              "typeString": "type(library SpellsStorage)"
                            }
                          },
                          "id": 12305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getStorage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11368,
                          "src": "2230:24:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Storage_$11356_storage_ptr_$",
                            "typeString": "function () pure returns (struct SpellsStorage.Storage storage pointer)"
                          }
                        },
                        "id": 12306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2230:26:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Storage_$11356_storage_ptr",
                          "typeString": "struct SpellsStorage.Storage storage pointer"
                        }
                      },
                      "id": 12307,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seedMintPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11334,
                      "src": "2230:40:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12308,
                      "name": "price_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12298,
                      "src": "2273:6:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2230:49:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12310,
                  "nodeType": "ExpressionStatement",
                  "src": "2230:49:46"
                }
              ]
            },
            "functionSelector": "91b7f5ed",
            "id": 12312,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12301,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12300,
                  "name": "protectedCall",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13086,
                  "src": "2207:13:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "2207:13:46"
              }
            ],
            "name": "setPrice",
            "nameLocation": "2173:8:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12298,
                  "mutability": "mutable",
                  "name": "price_",
                  "nameLocation": "2190:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 12312,
                  "src": "2182:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2182:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2181:16:46"
            },
            "returnParameters": {
              "id": 12302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2221:0:46"
            },
            "scope": 12313,
            "src": "2164:121:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 12314,
        "src": "955:1336:46",
        "usedErrors": [
          12199
        ]
      }
    ],
    "src": "32:2259:46"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x51865531C2E7B80935125837b025FEb3224f1DC0",
      "transactionHash": "0x8cd6853b77e108fff19f70bc0c7418be18e6fc1836c4cc43c70e9e9daa5dc365"
    }
  },
  "schemaVersion": "3.4.9",
  "updatedAt": "2022-09-06T22:21:08.978Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "setGodsepll(address)": {
        "details": "Only callable by the godspell."
      },
      "setSaleState(uint8)": {
        "details": "Sets sale state to CLOSED (0), PRESALE (1), or OPEN (2)."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "setGodsepll(address)": {
        "notice": "Set the godspell."
      }
    },
    "version": 1
  }
}